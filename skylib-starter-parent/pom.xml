<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.1</version>
		<relativePath />
	</parent>

	<groupId>ch.scaille</groupId>
	<artifactId>skylib-starter-parent</artifactId>
	<version>${revision}</version>
	<name>skylib-starter-parent</name>
	<packaging>pom</packaging>

	<properties>
		<revision>0.0.1-SNAPSHOT</revision>
		
		<aspectj.version>1.9.22.1</aspectj.version>
		<spring-session.version>3.4.1</spring-session.version>
		<jackson-bom.version>2.18.2</jackson-bom.version>
		<jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
		<guava.version>33.4.0-jre</guava.version>
		<logback.version>1.5.15</logback.version>
		<mapstruct.version>1.6.3</mapstruct.version>

		<jetbrain-annotations.version>26.0.1</jetbrain-annotations.version>
		
		<swagger-parser.version>2.1.23</swagger-parser.version>
		<swagger.version>2.2.27</swagger.version>
		<springdoc-openapi.version>2.7.0</springdoc-openapi.version>

		<undertow.version>2.3.18.Final</undertow.version>
		<liquibase.version>4.30.0</liquibase.version>

		<mockito.version>5.14.2</mockito.version>
		<junit-jupiter.version>5.11.4</junit-jupiter.version>
		<junit.version>4.13.2</junit.version>
		<junit-platform-console-standalone.version>1.11.4</junit-platform-console-standalone.version>
		<selenium.version>4.27.0</selenium.version>
		<h2.version>2.3.232</h2.version>

		<coverage.temp>${java.io.tmpdir}/coverage/${basedir}</coverage.temp>

		<maven-install-plugin.version>3.1.3</maven-install-plugin.version>
		<build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>
		<maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>
		<maven-help-plugin.version>3.5.1</maven-help-plugin.version>
		<maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
		<maven-source-plugin.version>3.3.1</maven-source-plugin.version>
		<maven-deploy-plugin.version>3.1.3</maven-deploy-plugin.version>
		<maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
		<maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
		<maven-war-plugin.version>3.4.0</maven-war-plugin.version>
		<maven-dependency-plugin.version>3.8.1</maven-dependency-plugin.version>
		<maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
		<maven-clean-plugin.version>3.4.0</maven-clean-plugin.version>
		<versions-maven-plugin.version>2.18.0</versions-maven-plugin.version>

		<maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>3.5.2</maven-failsafe-plugin.version>

		<maven-exec-plugin.version>3.5.0</maven-exec-plugin.version>
		<openapi-generator-maven-plugin.version>7.10.0</openapi-generator-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>

	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.session</groupId>
				<artifactId>spring-session-bom</artifactId>
				<version>${spring-session.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.openapitools</groupId>
				<artifactId>jackson-databind-nullable</artifactId>
				<version>${jackson-databind-nullable.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${mapstruct.version}</version>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-console-standalone</artifactId>
				<version>${junit-platform-console-standalone.version}</version>
			</dependency>
			<dependency>
				<groupId>io.swagger.core.v3</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
				<version>${springdoc-openapi.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-testing-core</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-testing-bdd-runtime</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-testing-bdd-tools</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-annotations</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-utils</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-javabeans</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-gui</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-gui-validation</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>gui-pilot-core</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>gui-pilot-swing</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>gui-pilot-selenium</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-generator-utils</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-persistence</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains</groupId>
				<artifactId>annotations</artifactId>
				<version>${jetbrain-annotations.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${maven-exec-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.github.webdriverextensions</groupId>
					<artifactId>webdriverextensions-maven-plugin</artifactId>
					<version>4.0.0</version>
				</plugin>

				<!--
				https://mvnrepository.com/artifact/org.sonarsource.scanner.maven/sonar-maven-plugin -->
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>5.0.0.4389</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
					<configuration>
						<ignoredVersions>.*-M.*,.*-[Aa]lpha.*,.*-[Bb]eta.*, .*-RC.*</ignoredVersions>
						<onlyProjectDependencies>true</onlyProjectDependencies>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>aspectj-maven-plugin</artifactId>
					<version>1.15.0</version>
					<dependencies>
						<dependency>
							<groupId>org.aspectj</groupId>
							<artifactId>aspectjtools</artifactId>
							<version>${aspectj.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.openapitools</groupId>
					<artifactId>openapi-generator-maven-plugin</artifactId>
					<version>${openapi-generator-maven-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>io.swagger.parser.v3</groupId>
							<artifactId>swagger-parser</artifactId>
							<version>${swagger-parser.version}</version>
						</dependency>
						<!--
                            The projects are importing jackson via Spring, but jackson-dataformat-yaml is
                        explicitly imported. The consequence is that the plugin's version of jackson
                        core is kept, but the version of jackson-dataformat-yaml is overridden.
                        Force it to avoid discrepancies and failures
                        -->

						<dependency>
							<groupId>com.fasterxml.jackson.dataformat</groupId>
							<artifactId>jackson-dataformat-yaml</artifactId>
							<version>2.17.1</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>1.6.0</version>
					<configuration>
						<updatePomFile>true</updatePomFile>
						<flattenMode>resolveCiFriendliesOnly</flattenMode>
					</configuration>
					<executions>
						<execution>
							<id>flatten</id>
							<phase>process-resources</phase>
							<goals>
								<goal>flatten</goal>
							</goals>
						</execution>
						<execution>
							<id>flatten.clean</id>
							<phase>clean</phase>
							<goals>
								<goal>clean</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<inherited>false</inherited>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>prepare</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<phase>initialize</phase>
								<configuration>
									<destFile>
										${coverage.temp}/sonar-coverage/module-${project.name}.exec
									</destFile>
								</configuration>
							</execution>
							<execution>
								<!-- must be executed for all modules after all
                                .exec are merged -->
								<id>merge-for-sonar</id>
								<goals>
									<goal>merge</goal>
								</goals>
								<configuration>
									<fileSets>
										<fileSet>
											<directory>
												${coverage.temp}/sonar-coverage/
											</directory>
											<includes>
												<include>module-*.exec</include>
											</includes>
										</fileSet>
									</fileSets>
									<destFile>${coverage.temp}/all.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<!-- must be executed for all modules after all
                                .exec are merged -->
								<id>report-for-sonar</id>
								<phase>none</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${coverage.temp}/all.exec</dataFile>
									<formats>XML</formats>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
