<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.1</version>
		<relativePath />
	</parent>

	<groupId>ch.scaille</groupId>
	<artifactId>skylib-starter-parent</artifactId>
	<version>${revision}</version>
	<name>skylib-starter-parent</name>
	<packaging>pom</packaging>

	<properties>
		<revision>0.0.1-SNAPSHOT</revision>

		<aspectj.version>1.9.21</aspectj.version>
		<jackson-bom.version>2.16.0</jackson-bom.version>

		<undertow.version>2.3.10.Final</undertow.version>
		<mockito.version>5.8.0</mockito.version>
		<junit-jupiter.version>5.10.1</junit-jupiter.version>
		<junit.version>4.13.2</junit.version>
		<junit-platform-console-standalone.version>1.10.1</junit-platform-console-standalone.version>
		<selenium.version>4.16.1</selenium.version>
		<h2.version>2.2.224</h2.version>

		<mapstruct.version>1.5.5.Final</mapstruct.version>

		<guava.version>33.0.0-jre</guava.version>
		<logback.version>1.4.14</logback.version>

		<jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
		<swagger-parser.version>2.1.19</swagger-parser.version>
		<swagger.version>2.2.20</swagger.version>

		<springdoc-openapi.version>2.3.0</springdoc-openapi.version>

		<coverage.temp>${java.io.tmpdir}/coverage/${basedir}</coverage.temp>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.session</groupId>
				<artifactId>spring-session-bom</artifactId>
				<version>3.2.1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.openapitools</groupId>
				<artifactId>jackson-databind-nullable</artifactId>
				<version>${jackson-databind-nullable.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${mapstruct.version}</version>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-console-standalone</artifactId>
				<version>${junit-platform-console-standalone.version}</version>
			</dependency>
			<dependency>
				<groupId>io.swagger.core.v3</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
				<version>${springdoc-openapi.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-testing-core</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-testing-bdd-runtime</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-testing-bdd-tools</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-annotations</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-utils</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-javabeans</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-gui</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-gui-validation</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>gui-pilot-core</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>gui-pilot-swing</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>gui-pilot-selenium</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-generator-utils</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>ch.scaille</groupId>
				<artifactId>lib-persistence</artifactId>
				<version>${revision}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.3.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.12.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.3.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.3.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>3.0.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.2.3</version>
				</plugin>
				<plugin>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>3.2.3</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.11.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.4.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.5.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.6.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.6.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.4.1</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>1.5.0</version>
				</plugin>

				<plugin>
					<groupId>com.github.webdriverextensions</groupId>
					<artifactId>webdriverextensions-maven-plugin</artifactId>
					<version>3.4.0</version>
				</plugin>

				<!--
				https://mvnrepository.com/artifact/org.sonarsource.scanner.maven/sonar-maven-plugin -->
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.10.0.2594</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.16.2</version>
					<configuration>
						<processDependencyManagementTransitive>false</processDependencyManagementTransitive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>aspectj-maven-plugin</artifactId>
					<version>1.15.0</version>
					<dependencies>
						<dependency>
							<groupId>org.aspectj</groupId>
							<artifactId>aspectjtools</artifactId>
							<version>${aspectj.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.openapitools</groupId>
					<artifactId>openapi-generator-maven-plugin</artifactId>
					<version>7.1.0</version>
					<dependencies>
						<dependency>
							<groupId>io.swagger.parser.v3</groupId>
							<artifactId>swagger-parser</artifactId>
							<version>${swagger-parser.version}</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.10</version>
						<executions>
							<execution>
								<id>prepare</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<phase>initialize</phase>
								<configuration>
									<destFile>
										${coverage.temp}/sonar-coverage/module-${project.name}.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<!-- must be executed for all modules after all
								.exec are merged -->
								<id>merge-for-sonar</id>
								<goals>
									<goal>merge</goal>
								</goals>
								<configuration>
									<fileSets>
										<fileSet>
											<directory>
												${coverage.temp}/sonar-coverage/</directory>
											<includes>
												<include>module-*.exec</include>
											</includes>
										</fileSet>
									</fileSets>
									<destFile>${coverage.temp}/all.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<!-- must be executed for all modules after all
								.exec are merged -->
								<id>report-for-sonar</id>
								<phase>none</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${coverage.temp}/all.exec</dataFile>
									<formats>XML</formats>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
